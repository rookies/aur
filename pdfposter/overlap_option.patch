---
 pdfposter.rst                  |   11 +++++++++++
 pdftools/pdfposter/__init__.py |   12 +++++++-----
 pdftools/pdfposter/cmd.py      |    4 +++-
 3 files changed, 21 insertions(+), 6 deletions(-)

Index: pdftools.pdfposter-0.6.0dev/pdftools/pdfposter/__init__.py
===================================================================
--- pdftools.pdfposter-0.6.0dev.orig/pdftools/pdfposter/__init__.py
+++ pdftools.pdfposter-0.6.0dev/pdftools/pdfposter/__init__.py
@@ -37,6 +37,7 @@ from logging import log
 import math
 
 DEFAULT_MEDIASIZE = 'a4'
+DEFAULT_OVERLAP_PERCENT = 0
 
 mm = 72 / 25.4
 
@@ -245,7 +246,7 @@ def _scale_pdf_page(page, factor):
     page[NameObject('/Contents')] = content
 
 
-def posterize(outpdf, page, mediabox, posterbox, scale, trimpage=False):
+def posterize(outpdf, page, mediabox, posterbox, scale, overlap=0.02, trimpage=False):
     """
     page: input page
     mediabox : size secs of the media to print on
@@ -256,7 +257,7 @@ def posterize(outpdf, page, mediabox, po
     ncols, nrows, scale, rotate = decide_num_pages(inbox, mediabox,
                                                    posterbox, scale)
     mediabox = mediabox.copy()
-    _scale_pdf_page(page, scale)
+    _scale_pdf_page(page, scale*(1-overlap))
     if rotate:
         page.rotateClockwise(90)
         rotate_box(inbox)
@@ -287,8 +288,8 @@ def posterize(outpdf, page, mediabox, po
                 newpage.trimBox = newpage.mediaBox
             newpage.cropBox = newpage.artBox = newpage.trimBox
             outpdf.addPage(newpage)
-            v_pos += v_step
-        h_pos += h_step
+            v_pos += v_step*(1-overlap)
+        h_pos += h_step*(1-overlap)
 
 def password_hook():
     import getpass
@@ -316,6 +317,7 @@ def main(opts, infilename, outfilename,
 
     for i, page in enumerate(inpdf.pages):
         log(19, '---- processing page %i -----', i+1)
-        posterize(outpdf, page, opts.media_size, opts.poster_size, opts.scale, opts.trimpage)
+        posterize(outpdf, page, opts.media_size, opts.poster_size, opts.scale, 
+          opts.overlap_percent*0.01/opts.scale, opts.trimpage)
     if not opts.dry_run:
         outpdf.write(open(outfilename, 'wb'))
Index: pdftools.pdfposter-0.6.0dev/pdftools/pdfposter/cmd.py
===================================================================
--- pdftools.pdfposter-0.6.0dev.orig/pdftools/pdfposter/cmd.py
+++ pdftools.pdfposter-0.6.0dev/pdftools/pdfposter/cmd.py
@@ -23,7 +23,7 @@ __author__ = "Hartmut Goebel <h.goebel@g
 __copyright__ = "Copyright 2008-2011 by Hartmut Goebel <h.goebel@goebel-consult.de>"
 __licence__ = "GNU General Public License version 3 (GPL v3)"
 
-from . import main, __version__, DEFAULT_MEDIASIZE, papersizes, DecryptionError
+from . import main, __version__, DEFAULT_MEDIASIZE, DEFAULT_OVERLAP_PERCENT, papersizes, DecryptionError
 import re
 
 # pattern for parsing user textual box spec
@@ -94,6 +94,8 @@ def run():
                      help='Specify the poster size (defaults to media size). ')
     group.add_option('-s', '--scale', type=float,
                      help='Specify a linear scaling factor to produce the poster.')
+    group.add_option('-O', '--overlap-percent', type=float, default = DEFAULT_OVERLAP_PERCENT,
+                     help='Image overlap (default: %g).' % DEFAULT_OVERLAP_PERCENT)
 
     opts, args = parser.parse_args()
 
Index: pdftools.pdfposter-0.6.0dev/pdfposter.rst
===================================================================
--- pdftools.pdfposter-0.6.0dev.orig/pdfposter.rst
+++ pdftools.pdfposter-0.6.0dev/pdfposter.rst
@@ -67,11 +67,22 @@ General Options
                       pages. Can be used more than once to increase the
                       verbosity.
 -n, --dry-run     Show what would have been done, but do not generate files.
+
 -t, --trimpage	Save the minimal bounding box with each page. This option is
                 only optional in version 0.6.0dev.jw; older versions always 
                 trim their output pages.  With -t, printers may center the
                 pages (giving unpredictable margins).
 
+-O, --overlap-percent NNN	Specify scale factor for input document pages. 
+				If this factor is positive, the input pages actually +overlap 
+				(or often only their margins overlap harmlessly). A negative factor 
+				increases margins.
+				The factor is given in percent of the input page size. Default 0.
+
+				-O 5 or -O 10 is suggested to compensate for printers that leave white 
+				margins instead of printing the entire images of the page. What is 
+				technically an overlap, now closes the gap.
+
 Defining Output
 -----------------
 
