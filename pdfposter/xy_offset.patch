--- pdftools/pdfposter/__init__.py	2011-10-25 15:45:41.532109275 +0200
+++ pdftools/pdfposter/__init__.py	2011-10-25 16:01:53.360959744 +0200
@@ -246,7 +246,7 @@
     page[NameObject('/Contents')] = content
 
 
-def posterize(outpdf, page, mediabox, posterbox, scale, overlap=0.02, trimpage=False):
+def posterize(outpdf, page, mediabox, posterbox, scale, overlap=0.02, trimpage=False, x_offp=.0,y_offp=.0):
     """
     page: input page
     mediabox : size secs of the media to print on
@@ -267,10 +267,10 @@
     v_step = mediabox['height'] - mediabox['offset_y']
     
     trimbox = rectangle2box(page.trimBox)
-    h_pos = float(trimbox['offset_x'])
+    h_pos = float(trimbox['offset_x']) + x_offp*h_step*0.01
     h_max, v_max = float(trimbox['width']), float(trimbox['height'])
     for col in range(ncols):
-        v_pos = float(trimbox['offset_y'])
+        v_pos = float(trimbox['offset_y']) + y_offp*v_step*0.01
         for row in range(nrows):
             log(17, 'Creating page with offset: %.2f %.2f' % (h_pos, v_pos))
             newpage = copyPage(page)
@@ -318,6 +318,6 @@
     for i, page in enumerate(inpdf.pages):
         log(19, '---- processing page %i -----', i+1)
         posterize(outpdf, page, opts.media_size, opts.poster_size, opts.scale, 
-          opts.overlap_percent*0.01/opts.scale, opts.trimpage)
+          opts.overlap_percent*0.01/opts.scale, opts.trimpage, opts.xoffset_percent, opts.yoffset_percent)
     if not opts.dry_run:
         outpdf.write(open(outfilename, 'wb'))
--- pdftools/pdfposter/cmd.py	2011-10-25 15:22:13.586711015 +0200
+++ pdftools/pdfposter/cmd.py	2011-10-25 16:01:53.391959357 +0200
@@ -96,6 +96,10 @@
                      help='Specify a linear scaling factor to produce the poster.')
     group.add_option('-O', '--overlap-percent', type=float, default = DEFAULT_OVERLAP_PERCENT,
                      help='Image overlap (default: %g).' % DEFAULT_OVERLAP_PERCENT)
+    group.add_option('-x', '--xoffset-percent', type=float, default = 0,
+                     help='shift the grid of pages horizontally (percent of the output page width).')
+    group.add_option('-y', '--yoffset-percent', type=float, default = 0,
+                     help='shift the grid of pages vertically (percent of the output page height).')
 
     opts, args = parser.parse_args()
 
